# -*- coding: utf-8 -*-
"""Docking_VS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SIuLjFMQ9sgVz4GIB_ATPEE5hhGv32jK
"""

# ===============================
# Program: Molecular Docking with AutoDock Vina
# ===============================

#--------------------------------
# Install required tools
#--------------------------------
!apt-get install -y autodock-vina openbabel

#--------------------------------
# Upload protein & ligands
#--------------------------------
from google.colab import files

print("Upload receptor PDBQT file (protein)")
uploaded = files.upload()

print("Upload ligand MOL or SDF files")
uploaded = files.upload()

import os

#--------------------------------
# Convert ligands & receptor → PDBQT
#--------------------------------

protein_files = [f for f in uploaded.keys() if f.endswith(".pdb")]

receptors = []
for i, prot in enumerate(protein_files):
    out_file = f"receptor_{i}.pdbqt"
    # Convert PDB → PDBQT using Open Babel
    !obabel {prot} -O {out_file} --gen3d
    receptors.append(out_file)

print("Converted receptors:", receptors)

#--------------------------------
# Convert ligands & receptor → PDBQT
#--------------------------------

import os

ligand_files = [f for f in uploaded.keys() if f.endswith(".mol") or f.endswith(".sdf")]
converted_ligands = []

for i, lig in enumerate(ligand_files):
    out_file = f"lig_{i}.pdbqt"
    !obabel {lig} -O {out_file} --gen3d
    converted_ligands.append(out_file)

print("Converted ligands:", converted_ligands)

#--------------------------------
# Run docking with AutoDock Vina
#--------------------------------

receptor = [f for f in uploaded.keys() if f.endswith(".pdbqt")][0]

# Define grid box (example values, should be adjusted!)
center_x, center_y, center_z = 10, 10, 10
size_x, size_y, size_z = 20, 20, 20

results = {}

for lig in converted_ligands:
    out_file = lig.replace(".pdbqt", "_out.pdbqt")
    log_file = lig.replace(".pdbqt", "_log.txt")

    !vina --receptor {receptor} --ligand {lig} \
          --center_x {center_x} --center_y {center_y} --center_z {center_z} \
          --size_x {size_x} --size_y {size_y} --size_z {size_z} \
          --out {out_file} --log {log_file}

    # Extract docking score (lowest binding energy)
    with open(log_file, "r") as f:
        for line in f:
            if line.strip().startswith("1 "):  # first docking pose
                score = float(line.split()[1])
                results[lig] = score
                break

print("Docking results:", results)

#--------------------------------
# Visualize best docking pose
#--------------------------------
!pip install py3Dmol

import py3Dmol

best_ligand = sorted_results[0][0].replace(".pdbqt", "_out.pdbqt")

view = py3Dmol.view(width=400, height=400)
view.addModel(open(receptor).read(), "pdbqt")   # protein
view.setStyle({"cartoon": {"color":"spectrum"}})

view.addModel(open(best_ligand).read(), "pdbqt")   # best ligand
view.setStyle({"model":1}, {"stick": {}})

view.zoomTo()
view.show()
